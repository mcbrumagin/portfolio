# Default HTTP server - redirects to HTTPS when SSL is configured
server {
    listen 80;
    listen [::]:80;
    server_name _;

    # ACME challenge for Let's Encrypt
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        allow all;
    }

    # Health check endpoint (no redirect)
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Redirect all other traffic to HTTPS (only after SSL is configured)
    # Uncomment the following block after obtaining SSL certificate
    # location / {
    #     return 301 https://$host$request_uri;
    # }

    # Temporary: proxy to backend when SSL is not yet configured
    location / {
        limit_req zone=general burst=20 nodelay;
        limit_conn addr 10;

        proxy_pass http://portfolio-app:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
}

# HTTPS server configuration
# Uncomment and configure after obtaining SSL certificate
# server {
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;
#     server_name YOUR_DOMAIN;
#
#     # SSL certificates
#     ssl_certificate /etc/letsencrypt/live/YOUR_DOMAIN/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/YOUR_DOMAIN/privkey.pem;
#
#     # SSL configuration
#     include /etc/nginx/snippets/ssl-params.conf;
#
#     # Security headers
#     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
#
#     location / {
#         limit_req zone=general burst=20 nodelay;
#         limit_conn addr 10;
#
#         # Bot filtering - block common bad bots
#         if ($http_user_agent ~* (bot|crawler|spider|scraper|curl|wget|python)) {
#             return 403;
#         }
#
#         proxy_pass http://portfolio-app:8000;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_cache_bypass $http_upgrade;
#         
#         # Timeouts
#         proxy_connect_timeout 60s;
#         proxy_send_timeout 60s;
#         proxy_read_timeout 60s;
#     }
#
#     # Health check
#     location /health {
#         access_log off;
#         return 200 "healthy\n";
#         add_header Content-Type text/plain;
#     }
# }

